platform :ios, '13.0'
use_frameworks!

# Always install the SDK from the local source code so the sample app tests this specific commit of the code. 
sdk_local_path = File.join(File.dirname(__FILE__), '../../')

target 'test cocoapods' do
  pod 'CustomerIOCommon', :path => sdk_local_path
  pod 'CustomerIODataPipelines', :path => sdk_local_path
  pod 'CustomerIOMessagingPush', :path => sdk_local_path
  pod 'CustomerIOMessagingInApp', :path => sdk_local_path
  pod 'CustomerIOMessagingPushFCM', :path => sdk_local_path

  # Adding APN for internal testing, only. Code from this pod is not used at runtime. 
  # We need to confirm that cocoapods customers can compile their apps with this pod installed. 
  pod 'CustomerIOMessagingPushAPN', :path => sdk_local_path
  pod 'CustomerIOTrackingMigration', :path => sdk_local_path

  # The "CustomerIOMessagingPushFCM" SDK installs the FCM SDK for you, defaulting to the latest version. 
  # If your app needs to use a specific version of the FCM SDK, you can add the line below to your app's Podfile 
  # and the version you specify will override the version in the "CustomerIOMessagingPushFCM" SDK. 
  # 
  # pod 'FirebaseMessaging', '~> 10.6'
  # 
  # See docs to learn the Podfile syntax for specifying version numbers:
  # https://guides.cocoapods.org/syntax/podfile.html#pod

  pod 'SampleAppsCommon', :path => File.join(File.dirname(__FILE__), '../Common')
end

target 'Rich Push Notification Service Extension' do 
  pod 'CustomerIOCommon', :path => sdk_local_path
  pod 'CustomerIODataPipelines', :path => sdk_local_path
  pod 'CustomerIOMessagingPush', :path => sdk_local_path
  pod 'CustomerIOMessagingPushFCM', :path => sdk_local_path

  # Adding APN for internal testing, only. Code from this pod is not used at runtime. 
  # We need to confirm that cocoapods customers can compile their apps with this pod installed. 
  pod 'CustomerIOMessagingPushAPN', :path => sdk_local_path
end 

# Add experimental Swift feature flag for access level on imports needed by Firebase 11+
post_install do |installer|
  installer.pods_project.targets.each do |target|
    # For debug purposes, print the target name
    puts "Target: #{target.name}"
    
    # Apply the flag to all targets to ensure it's applied to Firebase targets
    target.build_configurations.each do |config|
      # For debug, print the current flags
      puts "  Config: #{config.name}, Current flags: #{config.build_settings['OTHER_SWIFT_FLAGS']}"
      
      # Add the experimental feature flag for access level on imports
      if config.build_settings['OTHER_SWIFT_FLAGS'].nil?
        config.build_settings['OTHER_SWIFT_FLAGS'] = '-enable-experimental-feature AccessLevelOnImport'
      else
        config.build_settings['OTHER_SWIFT_FLAGS'] += ' -enable-experimental-feature AccessLevelOnImport'
      end
      
      # For debug, print the updated flags
      puts "  Updated flags: #{config.build_settings['OTHER_SWIFT_FLAGS']}"
    end
  end
end
