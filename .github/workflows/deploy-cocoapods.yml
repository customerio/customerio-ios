name: Deploy SDK to Cocoapods

# Deploy cocoapods after a git tag made. Cocoapods uses tags to deploy. 
# We also allow manually running this workflow in case a deploy failed for a given git tag and 
# we want to retry it. 
on:
  release:
    types: [published]
  workflow_dispatch: 
    inputs:
      tagToPush:
        description: 'Type name of existing git tag to retry pushing cocoapods for (example: 1.0.3)'
        required: true
        type: string 

env:
  COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

jobs:
  deploy-cocoapods:
    name: Deploy SDK to Cocoapods 
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - name: Checkout existing tag if manually running CI task  
        uses: actions/checkout@v2
        # If input is not given, that probably means this CI task was run automatically by a new 
        # git tag being pushed. Skip this step and try to deploy pods for new tag. 
        if: ${{ github.event.inputs.tagToPush != '' }}
        with:
          ref: ${{ github.event.inputs.tagToPush }}
      - name: Install cocoapods 
        run: gem install cocoapods 
      - name: deploy all pods
        run: ./scripts/deploy-code.sh

      - name: Notify team of successful deployment 
        uses: slackapi/slack-github-action@v1.18.0        
        if: ${{ success() }}
        with:
          # Use block kit for format of the JSON payloads: https://app.slack.com/block-kit-builder
          payload: |
            {
              "text": "iOS SDK deployed to Maven Central",
              "blocks": [
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "*iOS* SDK deployed to Cocoapods! (deployment step 2 of 2)"
                      }
                  },
                  {
                      "type": "divider"
                  },
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "*Version ${{ github.event.release.tag_name }}*\n\niOS SDK deployment progress:\n ~1. <https://github.com/${{github.repository}}/releases/tag/${{ github.event.release.tag_name }}|create git tag and deploy to Swift Package Manager>~\n~2. deploy to cocoapods~\n\n"
                      }
                  }
              ]
            }
        env:
          # Incoming webhook URL that sends message into the correct Slack channel. 
          # Help on how to get the webhook URL: https://github.com/marketplace/actions/slack-send#setup-2
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFY_RELEASES_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      
      - name: Notify team of failure 
        uses: slackapi/slack-github-action@v1.18.0
        if: ${{ failure() }} # only run this if any previous step failed 
        with:
          # Use block kit for format of the JSON payloads: https://app.slack.com/block-kit-builder
          payload: |
            {
              "text": "iOS SDK deployment failure",
              "blocks": [
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "*iOS* SDK deployment :warning: failure :warning:"
                      }
                  },
                  {
                      "type": "divider"
                  },
                  {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "iOS SDK failed deployment during step *deploy to cocoapods*. View <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|CI server logs> to learn why and fix the issue. <https://github.com/customerio/mobile/blob/main/GIT-WORKFLOW.md|Learn more about the deployment process and how to fix errors>."
                      }
                  }
              ]
            }
        env:
          # Incoming webhook URL that sends message into the correct Slack channel. 
          # Help on how to get the webhook URL: https://github.com/marketplace/actions/slack-send#setup-2
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFY_RELEASES_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK  