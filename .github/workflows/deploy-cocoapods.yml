name: Deploy SDK to Cocoapods

# Deploy cocoapods after a git tag made. Cocoapods uses tags to deploy. 
# We also allow manually running this workflow in case a deploy failed for a given git tag and 
# we want to retry it. 
on:
  release:
    types: [published]
  workflow_dispatch: 
    inputs:
      tagToPush:
        description: 'Type name of existing git tag to retry pushing cocoapods for (example: 1.0.3)'
        required: true
        type: string 

env:
  COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

jobs:
  deploy-cocoapods:
    name: Deploy SDK to Cocoapods 
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - name: Checkout existing tag if manually running CI task  
        uses: actions/checkout@v2
        # If input is not given, that probably means this CI task was run automatically by a new 
        # git tag being pushed. Skip this step and try to deploy pods for new tag. 
        if: ${{ github.event.inputs.tagToPush != '' }}
        with:
          ref: ${{ github.event.inputs.tagToPush }}
      - name: Install cocoapods 
        run: gem install cocoapods 
      - name: Push CustomerIOTracking 
        run: ./scripts/push-cocoapod.sh CustomerIOTracking.podspec
      - name: Push CustomerIOMessagingPush 
        run: ./scripts/push-cocoapod.sh CustomerIOMessagingPush.podspec
      - name: Push CustomerIOMessagingPushAPN 
        run: ./scripts/push-cocoapod.sh CustomerIOMessagingPushAPN.podspec
      - name: Push CustomerIOMessagingPushFCM 
        run: ./scripts/push-cocoapod.sh CustomerIOMessagingPushFCM.podspec
      - name: Push CustomerIO
        run: ./scripts/push-cocoapod.sh CustomerIO.podspec

      - name: Create GitHub issue if fail to deploy 
        uses: JasonEtco/create-an-issue@v2
        if: ${{ failure() }} 
        with: 
          filename: .github/FAIL_COCOAPODS_DEPLOY_ISSUE_TEMPLATE.md
        env:
          GITHUB_TOKEN: ${{ secrets.READ_ONLY_BOT_TOKEN }}
          RELEASE_VERSION: ${{ github.event.release.tag_name }}
      
      - name: Notify team of successful deployment 
        uses: slackapi/slack-github-action@v1.18.0        
        if: ${{ success() }}
        with:
          # Use block kit for format of the JSON payloads: https://app.slack.com/block-kit-builder
          payload-file-path: ".github/slack-payloads/deploy_code_success.json"            
        env:
          # Incoming webhook URL that sends message into the correct Slack channel. 
          # Help on how to get the webhook URL: https://github.com/marketplace/actions/slack-send#setup-2
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFY_RELEASES_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      
      - name: Notify team of failure 
        uses: slackapi/slack-github-action@v1.18.0
        if: ${{ failure() }} # only run this if any previous step failed 
        with:
          # Use block kit for format of the JSON payloads: https://app.slack.com/block-kit-builder
          payload-file-path: ".github/slack-payloads/deploy_code_fail.json"
        env:
          # Incoming webhook URL that sends message into the correct Slack channel. 
          # Help on how to get the webhook URL: https://github.com/marketplace/actions/slack-send#setup-2
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFY_RELEASES_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK  