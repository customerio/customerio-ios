name: Build sample apps 

on: 
  pull_request: # build sample apps for every commit pushed to an open pull request (including drafts)
  release: # build sample apps for every git tag created. These are known as "stable" builds that are suitable for people outside the mobile team. 
    types: [published]

jobs:
  build-sample-apps:
    strategy:
      matrix: # Use a matrix allowing us to build multiple apps in parallel. Just add an entry to the matrix and it will build! 
        sample-app: 
        # List all sample apps you want to have compiled. 
        # List item is name of directory inside of "Apps" directory for the corresponding app to compile. 
        - "CocoaPods-FCM"

    runs-on: macos-12
    name: Building app...${{ matrix.sample-app }}
    defaults:
      run:       
        working-directory: "Apps/${{ matrix.sample-app }}" # changes directory into the sample app's directory. That's where we want our commands to run from.  
    steps:
    - uses: actions/checkout@v3

    - name: Set up Xcode to version we determine 
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 14

    - name: Install CLI tools used in CI script 
      run: |
        brew install sd # used in CI script as an easier to use sed CLI. Replaces text in files. 
        brew install xcbeautify # used by fastlane for output 
    
    - name: Install tools from Gemfile (ruby language) used for building our apps with 
      uses: ruby/setup-ruby@v1
      with:
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        ruby-version: '3.0'
        bundler-cache: true # cache tools to make builds faster in future 
    
    - name: Setup build environment to prepare for building 
      working-directory: ${{ env.GITHUB_WORKSPACE }} # root directory of source code 
      run: |
        make setup_sample_app app=${{ matrix.sample-app }}
        sd CUSTOMERIO_WORKSPACE_SITE_ID ${{ secrets.CUSTOMERIO_WORKSPACE_SITE_ID }} "Apps/${{ matrix.sample-app }}/BuildEnvironment.swift"
        sd CUSTOMERIO_WORKSPACE_API_KEY ${{ secrets.CUSTOMERIO_WORKSPACE_API_KEY }} "Apps/${{ matrix.sample-app }}/BuildEnvironment.swift"

    - name: Does ${{ matrix.sample-app }} use CocoaPods? 
      id: check_podfile_exists
      uses: andstor/file-existence-action@v1
      with:
        files: "Apps/${{ matrix.sample-app }}/Podfile"

    - name: Cache CocoaPods downloaded dependencies for faster builds in the future 
      if: steps.check_podfile_exists.outputs.files_exists == 'true'
      uses: actions/cache@v3
      with:
        path: "Apps/${{ matrix.sample-app }}/Pods"
        key: ${{ runner.os }}-${{ matrix.sample-app}}-Pods
        restore-keys: |
          ${{ runner.os }}-${{ matrix.sample-app}}-Pods

    - name: Run pod install if using CocoaPods 
      working-directory: ${{ env.GITHUB_WORKSPACE }} # root directory of source code 
      if: steps.check_podfile_exists.outputs.files_exists == 'true'
      run: make install_cocoapods_dependencies app=CocoaPods-FCM

      # - name: Dump GitHub Action metadata because Fastlane uses it. Viewing it here helps debug JSON parsing code in Firebase. 
    #   run: cat $GITHUB_EVENT_PATH

    - name: Build app via Fastlane 
      uses: maierj/fastlane-action@v3.0.0
      with:
        lane: "build"
        subdirectory: "Apps/${{ matrix.sample-app }}"
      env: 
        GOOGLE_CLOUD_MATCH_READONLY_SERVICE_ACCOUNT_B64: ${{ secrets.GOOGLE_CLOUD_MATCH_READONLY_SERVICE_ACCOUNT_B64 }}
        FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_CREDS_B64: ${{ secrets.FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_CREDS_B64 }}
    

