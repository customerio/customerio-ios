name: Build sample apps 

on: 
  pull_request: # build sample apps for every commit pushed to an open pull request (including drafts)
  push: 
    branches: [ main, feature/* ]
  workflow_dispatch: # allow manual run     

concurrency: # cancel previous workflow run if one exists. 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-pr-comment:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # to be able to comment on PR
    outputs:
      comment-id: ${{ steps.create-comment.outputs.comment-id }}
    steps:
    - name: Find Comment
      uses: peter-evans/find-comment@v3
      id: existing-comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: <!-- sample app builds --> 
    
    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v4
      id: create-comment
      with:
        comment-id: ${{ steps.existing-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          <!-- sample app builds --> 
          # Sample app builds ðŸ“±
          
          Below you will find the list of the latest versions of the sample apps. It's recommended to always download the latest builds of the sample apps to accurately test the pull request. 

          ---
          ${{ steps.build.outputs.build-log }}
        edit-mode: replace # replace the existing comment with new content since we are creating new builds 

  build-sample-apps:
    if: ${{ always() }} # do not skip running this step if update-pr-comment does not run 
    needs: [update-pr-comment] # wait for PR comment to be created saying new builds are being made. 
    permissions:
      pull-requests: write # comment on pull request with build information 
    strategy:
      fail-fast: false # if one sample app fails to build, let the other sample apps continue to build and not cancel them. 
      matrix: # Use a matrix allowing us to build multiple apps in parallel. Just add an entry to the matrix and it will build!
        sample-app: 
        # List all sample apps you want to have compiled. 
        # List item is name of directory inside of "Apps" directory for the corresponding app to compile. 
        - "CocoaPods-FCM"
        - "APN-UIKit"
        include: # Add additional variables to each sample app build: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategymatrixinclude
          - sample-app: "APN-UIKit"
            apn-or-fcm: APN
          - sample-app: "CocoaPods-FCM"
            apn-or-fcm: FCM

    runs-on: macos-14
    name: Building app...${{ matrix.sample-app }}
    steps:
    - uses: actions/checkout@v4

    - name: Build and upload app build for QA testing 
      uses: ./.github/actions/build-sample-app
      with:
        apn-or-fcm: ${{ matrix.apn-or-fcm }}
        sample-app: ${{ matrix.sample-app }}
        customerio-workspace-siteid: ${{ secrets[format('CUSTOMERIO_{0}_WORKSPACE_SITE_ID', matrix.apn-or-fcm)] }}
        customerio-workspace-cdp-api-key: ${{ secrets[format('CUSTOMERIO_{0}_WORKSPACE_CDP_API_KEY', matrix.apn-or-fcm)] }}
        GOOGLE_CLOUD_MATCH_READONLY_SERVICE_ACCOUNT_B64: ${{ secrets.GOOGLE_CLOUD_MATCH_READONLY_SERVICE_ACCOUNT_B64 }}
        FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_CREDS_B64: ${{ secrets.FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_CREDS_B64 }}

    - name: Update sample builds PR comment with build information 
      if: ${{ github.event_name == 'pull_request' }}
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ needs.update-pr-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        # the variables APP_BUILD_NUMBER, APP_VERSION_STRING are created when fastlane runs "build". 
        body: |
          * ${{ matrix.sample-app }}: `${{ env.APP_VERSION_STRING }} (${{ env.APP_BUILD_NUMBER }})`
        edit-mode: append # append new line to the existing PR comment to build a list of all sample app builds. 

    - name: Update sample builds PR comment with build failure message 
      if: ${{ failure() }}
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ needs.update-pr-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          * ${{ matrix.sample-app }}: Build failed. See [CI job logs](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}) to determine the issue and try re-building. 
        edit-mode: append # append new line to the existing PR comment to build a list of all sample app builds. 

  generate-sdk-size-reports:
    runs-on: macos-14
    permissions:
      pull-requests: write # to be able to comment on PR
    name: Generate SDK size reports 
    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/generate-sdk-size-report
      id: generate-sdk-size-report
      with:
        GOOGLE_CLOUD_MATCH_READONLY_SERVICE_ACCOUNT_B64: ${{ secrets.GOOGLE_CLOUD_MATCH_READONLY_SERVICE_ACCOUNT_B64 }}
    
    - name: Find existing SDK size report comment, if there is one. 
      if: github.event_name == 'pull_request'
      uses: peter-evans/find-comment@v3
      id: find-sdk-size-report-comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: <!-- sdk size reports -->

    - name: Send SDK size reports to the PR for convenient viewing 
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.find-sdk-size-report-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        edit-mode: replace
        body: |
          <!-- sdk size reports -->
          # SDK binary size reports ðŸ“Š

          <details>
          <summary>SDK binary size of this PR</summary>

          ```  
          ${{ steps.generate-sdk-size-report.outputs.sdk-size-report }}
          ```

          </details>

          <details>
          <summary>SDK binary size diff report between this PR and the main branch</summary>
          
          ``` 
          ${{ steps.generate-sdk-size-report.outputs.sdk-size-diff-report }}
          ```
          
          </details>