name: Build sample apps 

on: [pull_request]

env:
  XCODE_VERSION_BUILD_APPS: 14
  FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 6 # fixes common problem when trying to compile iOS apps on GH actions runner. I think because GH action runners are slow? 

jobs:
  build-sample-apps:
    strategy:
      matrix: # Use a matrix allowing us to build multiple apps in parallel. Just add an entry to the matrix and it will build! 
        sample-app: 
        # List all sample apps you want to have compiled. 
        # List item is name of directory inside of "Apps" directory for the corresponding app to compile. 
        - "CocoaPods-FCM"

    runs-on: macos-12
    name: Building app...${{ matrix.sample-app }}
    defaults:
      run:       
        working-directory: "Apps/${{ matrix.sample-app }}" # changes directory into the sample app's directory. That's where we want our commands to run from.  
    steps:
    - uses: actions/checkout@v3

    - name: Set up XCode ${{ env.XCODE_VERSION_BUILD_APPS }}
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE_VERSION_BUILD_APPS }}

    - name: Setup files needed for build 
      run: |
        echo "${{ secrets.FASTLANE_GC_KEYS_FILE_B64 }}" | base64 -d > gc_keys.json
    
    - name: Install tools from Gemfile (ruby language) used for building our apps with 
      uses: ruby/setup-ruby@v1
      with:
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        ruby-version: '3.0'
        bundler-cache: true # cache tools to make builds faster in future 

    - name: Does ${{ matrix.sample-app }} use CocoaPods? 
      id: check_podfile_exists
      uses: andstor/file-existence-action@v1
      with:
        files: "Apps/${{ matrix.sample-app }}/Podfile"

    - name: Cache CocoaPods downloaded dependencies for faster builds in the future 
      if: steps.check_podfile_exists.outputs.files_exists == 'true'
      uses: actions/cache@v3
      with:
        path: "Apps/${{ matrix.sample-app }}/Pods"
        key: ${{ runner.os }}-${{ matrix.sample-app}}-Pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.sample-app}}-Pods-

    - name: pod install if app uses CocoaPods 
      if: steps.check_podfile_exists.outputs.files_exists == 'true'
      run: pod install 

    - name: Install tools for Fastlane build to use
      run: brew install xcbeautify

    - name: Build app via Fastlane 
      uses: maierj/fastlane-action@v3.0.0
      with:
        lane: "ios build_app"
        subdirectory: "Apps/${{ matrix.sample-app }}"
    

