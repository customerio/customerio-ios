name: Test deployment 

on: [push]

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  find-pr-open-for-branch:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.findPr.outputs.number }}
      pr_title: ${{ steps.findPr.outputs.title }}
    steps:
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr

  semantic-release-dry-run:
    needs: find-pr-open-for-branch
    if: needs.find-pr-open-for-branch.outputs.pr_number != '' 
    runs-on: ubuntu-latest
    name: Dry run deployment
    permissions:
      issues: write # comment on github issues 
      pull-requests: write # comment and interact with PRs. 
    steps:
    - uses: actions/checkout@v3

    - name: Get branch names to use later 
      id: branch-name
      uses: tj-actions/branch-names@v6

    # Careful *not* to do a 'git push' anywhere since we are merging commits into production branches here!
    # Help with how to squash and merge a PR: https://stackoverflow.com/a/5201642
    # - name: Squash and merge the current pull request to simulate merging this PR 
#      run: |
    - run: git fetch --depth=1
    - run: git log 
    - run: git checkout ${{ steps.branch-name.outputs.current_branch }}
    - run: git config user.email "ci@c.io" && git config user.name "CI Server"
    - run: git reset --soft origin/main && git commit -m "${{ needs.find-pr-open-for-branch.outputs.pr_title }}"
    - run: git log  
    - run: git checkout main && git pull
    - run: git log 
    - run: git merge ${{ steps.branch-name.outputs.current_branch }}
    - run: git log 
    - run: git branch && git status
    
    - uses: cycjimmy/semantic-release-action@v3
      id: semantic-release
      with: 
        semantic_version: 18 # version numbers below can be in many forms: M, M.m, M.m.p
        dry_run: true # Critical. If we do not do this, an actual deployment will happen. 
        extra_plugins: |
          conventional-changelog-conventionalcommits@4
          @semantic-release/changelog@6
          @semantic-release/git@10
          @semantic-release/github@8
          @semantic-release/exec@6
        branches: |
          [
            '${{ steps.branch-name.outputs.current_branch }}'
          ]
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create comment
      uses: peter-evans/create-or-update-comment@v2
      if: steps.semantic-release.outputs.new_release_published == 'true'      
      with:
        issue-number: ${{ needs.find-pr-open-for-branch.outputs.pr_number }}
        body: |
          # Test deployment results          

          If this branch gets merged and a deployment occurs, this is the result of what will happen: 

          * Previous version: ${{ steps.semantic-release.outputs.last_release_version }}
          * New version: ${{ steps.semantic-release.outputs.new_release_version }}
          * Release notes: ${{ steps.semantic-release.outputs.new_release_notes }}
