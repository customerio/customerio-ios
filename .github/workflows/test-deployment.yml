name: Test deployment 

on: 
  push:
    branches:
      - simulated_merge_pr_* # only run on pushes to branches that begin with this name. 

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  semantic-release-dry-run:    
    runs-on: ubuntu-latest
    name: Dry run deployment
    permissions: # permissions must match that of a real deployment because auth is tested in dry-run
      contents: write # for pushing commits and tags 
      issues: write # comment on github issues 
      pull-requests: write # comment and interact with PRs. 
    steps:
    - uses: actions/checkout@v3

    - name: Get branch names to use later 
      id: branch-name
      uses: tj-actions/branch-names@v6

    # the branch name contains the pull request number. Pull it out. 
    - name: Get the PR number 
      uses: mad9000/actions-find-and-replace-string@2
      id: pr-number
      with:
        source: ${{ steps.branch-name.outputs.current_branch }}
        find: 'simulated_merge_pr_'
        replace: '' # we just want the number at the end 

    - uses: cycjimmy/semantic-release-action@v3
      id: semantic-release
      with: 
        semantic_version: 18 # version numbers below can be in many forms: M, M.m, M.m.p
        dry_run: true # Critical. If we do not do this, an actual deployment will happen. 
        extra_plugins: |
          conventional-changelog-conventionalcommits@4
          @semantic-release/changelog@6
          @semantic-release/git@10
          @semantic-release/github@8
          @semantic-release/exec@6
        branches: |
          [
            '${{ steps.branch-name.outputs.current_branch }}'
          ]
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create comment
      uses: peter-evans/create-or-update-comment@v2
      if: steps.semantic-release.outputs.new_release_published == 'true'      
      with:
        issue-number: ${{ steps.pr-number.outputs.value }}
        body: |
          # Test deployment results          

          If this branch gets merged and a deployment occurs, this is the result of what will happen: 

          * Previous version: ${{ steps.semantic-release.outputs.last_release_version }}
          * New version: ${{ steps.semantic-release.outputs.new_release_version }}
          * Release notes: ${{ steps.semantic-release.outputs.new_release_notes }}
