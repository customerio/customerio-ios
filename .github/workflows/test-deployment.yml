name: Test deployment 

# This workflow gets triggered by another workflow. 
on:
  workflow_dispatch:
    inputs:
      branch_to_checkout:
        description: 'Branch name to checkout and then run the test deployment from.'
        required: true
        type: string
      pr_number:
        description: 'Pull request number associated with this test deployment'
        required: true 
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  LINK_TO_THIS_WORKFLOW_LOGS: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  semantic-release-dry-run:    
    runs-on: ubuntu-latest
    name: Dry run deployment
    permissions: # permissions must match that of a real deployment because auth is tested in dry-run
      contents: write # for pushing commits and tags 
      issues: write # comment on github issues 
      pull-requests: write # comment and interact with PRs. 
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch_to_checkout }}

    - uses: marocchino/sticky-pull-request-comment@v2
      with:
        number: ${{ inputs.pr_number }}
        message: |
          Simulating a deployment after this PR gets merged...this comment will be updated after the testing has been completed...

    - uses: cycjimmy/semantic-release-action@v3
      id: semantic-release
      with: 
        semantic_version: 18 # version numbers below can be in many forms: M, M.m, M.m.p
        dry_run: true # Critical. If we do not do this, an actual deployment will happen. 
        extra_plugins: |
          conventional-changelog-conventionalcommits@4
          @semantic-release/changelog@6
          @semantic-release/git@10
          @semantic-release/github@8
          @semantic-release/exec@6
        branches: |
          [
            '${{ inputs.branch_to_checkout }}'
          ]
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ steps.semantic-release.outputs.new_release_published == 'true' }}
      with:
        number: ${{ inputs.pr_number }}
        message: |
          # Test deployment results          

          If this pull request gets merged, a new release will be made. 

          * Previous version: ${{ steps.semantic-release.outputs.last_release_version }}
          * New version: ${{ steps.semantic-release.outputs.new_release_version }}
          * Release notes: ${{ steps.semantic-release.outputs.new_release_notes }}

          Think this is a mistake? View the [CI server logs here](${{ env.LINK_TO_THIS_WORKFLOW_LOGS }}) to view the simulated deployment. 

    - uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ steps.semantic-release.outputs.new_release_published == 'false' }}
      with:
        number: ${{ inputs.pr_number }}
        message: |
          # Test deployment results          

          If this pull request gets merged, a new release will *not* be made. 

          Think this is a mistake? View the [CI server logs here](${{ env.LINK_TO_THIS_WORKFLOW_LOGS }}) to view the simulated deployment. 
    
    - uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ failure() }}
      with:
        number: ${{ inputs.pr_number }}
        message: |
          Testing of a deployment failed to execute. This could mean that there is an issue with the deployment configuration. 
          It's suggested that you [view the CI server logs here](${{ env.LINK_TO_THIS_WORKFLOW_LOGS }}) to see what went wrong and fix the issue before merging the PR. 
          
  delete-branch:
    needs: semantic-release-dry-run
    name: Delete branch after no longer need it 
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to delete branch
    steps:
      - uses: actions/checkout@v3
      - run: git push origin --delete 
      