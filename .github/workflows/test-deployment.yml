name: Test deployment 

on: [pull_request]

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  semantic-release-dry-run:
    runs-on: ubuntu-latest
    name: Dry run deployment
    permissions:
      contents: write # push git commits and tags 
      issues: write   # comment on github issues 
      pull-requests: write # comment and interact with PRs. 
    steps:
    - uses: actions/checkout@v3

    - name: Get branch names to use later 
      id: branch-name
      uses: tj-actions/branch-names@v6

    # Careful *not* to do a 'git push' anywhere since we are merging commits into production branches here!
    # Help with how to squash and merge a PR: https://stackoverflow.com/a/5201642
    # - name: Squash and merge the current pull request to simulate merging this PR 
#      run: |
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - run: git log
    - uses: actions/checkout@v3
      with:
        ref: ${{ steps.branch-name.outputs.current_branch }}
        clean: false 
    - run: git config user.email "ci@c.io" && git config user.name "CI Server"
    - run: git reset --soft main && git commit -m "${{ github.event.pull_request.title }}"
    - run: git log
    - uses: actions/checkout@v3
      with:
        ref: main 
        clean: false 
    - run: git log 
    - run: git merge ${{ steps.branch-name.outputs.current_branch }}
    - run: git log 
    
    - uses: cycjimmy/semantic-release-action@v3
      id: semantic-release
      with: 
        semantic_version: 18 # version numbers below can be in many forms: M, M.m, M.m.p
        dry_run: true # Critical. If we do not do this, an actual deployment will happen. 
        extra_plugins: |
          conventional-changelog-conventionalcommits@4
          @semantic-release/changelog@6
          @semantic-release/git@10
          @semantic-release/github@8
          @semantic-release/exec@6
        branches: |
          [
            'main'
          ]
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - uses: marocchino/sticky-pull-request-comment@v2
      if: steps.semantic-release.outputs.new_release_published == 'true'
      with:
        message: |
          # Test deployment results          

          If this PR gets merged and a deployment occurs, this is the result of what will happen: 

          * Previous version: ${{ steps.semantic-release.outputs.last_release_version }}
          * New version: ${{ steps.semantic-release.outputs.new_release_version }}
          * Release notes: ${{ steps.semantic-release.outputs.new_release_notes }}